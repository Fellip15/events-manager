{"ast":null,"code":"import axios from \"axios\";\nexport const login = async (email, password) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const data = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    return data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport async function register(email, password) {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const data = await axios.post(\"/api/users\", {\n      email,\n      password\n    }, config);\n    return data;\n  } catch (error) {\n    return null;\n  }\n}\n;\nexport const updateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","login","email","password","config","headers","data","post","error","logout","localStorage","removeItem","dispatch","type","USER_LOGOUT","register","USER_REGISTER_REQUEST","updateProfile","user","getState","USER_UPDATE_REQUEST","userLogin","userInfo","Authorization","token","USER_UPDATE_SUCCESS","payload","USER_LOGIN_SUCCESS","setItem","JSON","stringify","USER_UPDATE_FAIL","response","message"],"sources":["/mnt/c/Users/Felip/Desktop/tokenlab/frontend/src/Actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\n  \nexport const login = async (email, password) => {\n    try {\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        };\n\n        const data = await axios.post(\n            \"/api/users/login\",\n            { email, password },\n            config\n        );\n        return data;\n    } catch (error) {\n        return null;\n    }\n};\n\nexport const logout = () => {\nlocalStorage.removeItem(\"userInfo\");\ndispatch({ type: USER_LOGOUT });\n};\n\nexport async function register(email, password) {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST });\n\n        const config = {\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        };\n\n        const data = await axios.post(\n        \"/api/users\",\n        { email, password },\n        config\n        );\n\n        return data;\n    } catch (error) {\n        return null;\n    }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\ntry {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n    userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n    headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n    },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n} catch (error) {\n    dispatch({\n    type: USER_UPDATE_FAIL,\n    payload:\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n    });\n}\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;EAC5C,IAAI;IACA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAMA,MAAMC,IAAI,GAAG,MAAMN,KAAK,CAACO,IAAN,CACf,kBADe,EAEf;MAAEL,KAAF;MAASC;IAAT,CAFe,EAGfC,MAHe,CAAnB;IAKA,OAAOE,IAAP;EACH,CAbD,CAaE,OAAOE,KAAP,EAAc;IACZ,OAAO,IAAP;EACH;AACJ,CAjBM;AAmBP,OAAO,MAAMC,MAAM,GAAG,MAAM;EAC5BC,YAAY,CAACC,UAAb,CAAwB,UAAxB;EACAC,QAAQ,CAAC;IAAEC,IAAI,EAAEC;EAAR,CAAD,CAAR;AACC,CAHM;AAKP,OAAO,eAAeC,QAAf,CAAwBb,KAAxB,EAA+BC,QAA/B,EAAyC;EAC5C,IAAI;IACAS,QAAQ,CAAC;MAAEC,IAAI,EAAEG;IAAR,CAAD,CAAR;IAEA,MAAMZ,MAAM,GAAG;MACfC,OAAO,EAAE;QACL,gBAAgB;MADX;IADM,CAAf;IAMA,MAAMC,IAAI,GAAG,MAAMN,KAAK,CAACO,IAAN,CACnB,YADmB,EAEnB;MAAEL,KAAF;MAASC;IAAT,CAFmB,EAGnBC,MAHmB,CAAnB;IAMA,OAAOE,IAAP;EACH,CAhBD,CAgBE,OAAOE,KAAP,EAAc;IACZ,OAAO,IAAP;EACH;AACJ;AAAA;AAED,OAAO,MAAMS,aAAa,GAAIC,IAAD,IAAU,OAAON,QAAP,EAAiBO,QAAjB,KAA8B;EACrE,IAAI;IACAP,QAAQ,CAAC;MAAEC,IAAI,EAAEO;IAAR,CAAD,CAAR;IAEA,MAAM;MACNC,SAAS,EAAE;QAAEC;MAAF;IADL,IAEFH,QAAQ,EAFZ;IAIA,MAAMf,MAAM,GAAG;MACfC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAELkB,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;MAFnC;IADM,CAAf;IAOA,MAAM;MAAElB;IAAF,IAAW,MAAMN,KAAK,CAACO,IAAN,CAAW,oBAAX,EAAiCW,IAAjC,EAAuCd,MAAvC,CAAvB;IAEAQ,QAAQ,CAAC;MAAEC,IAAI,EAAEY,mBAAR;MAA6BC,OAAO,EAAEpB;IAAtC,CAAD,CAAR;IAEAM,QAAQ,CAAC;MAAEC,IAAI,EAAEc,kBAAR;MAA4BD,OAAO,EAAEpB;IAArC,CAAD,CAAR;IAEAI,YAAY,CAACkB,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAexB,IAAf,CAAjC;EACH,CArBD,CAqBE,OAAOE,KAAP,EAAc;IACZI,QAAQ,CAAC;MACTC,IAAI,EAAEkB,gBADG;MAETL,OAAO,EACHlB,KAAK,CAACwB,QAAN,IAAkBxB,KAAK,CAACwB,QAAN,CAAe1B,IAAf,CAAoB2B,OAAtC,GACEzB,KAAK,CAACwB,QAAN,CAAe1B,IAAf,CAAoB2B,OADtB,GAEEzB,KAAK,CAACyB;IALH,CAAD,CAAR;EAOH;AACA,CA/BM"},"metadata":{},"sourceType":"module"}