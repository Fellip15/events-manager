{"ast":null,"code":"import axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      email,\n      password\n    }, config);\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(\"AAAAA\");\n  }\n};\nexport const updateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","logout","removeItem","USER_LOGOUT","register","USER_REGISTER_REQUEST","console","log","updateProfile","user","getState","USER_UPDATE_REQUEST","userLogin","userInfo","Authorization","token","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL"],"sources":["/mnt/c/Users/Felip/Desktop/tokenlab/frontend/src/Actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\n  \nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.post(\n            \"/api/users/login\",\n            { email, password },\n            config\n        );\n\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const logout = () => async (dispatch) => {\nlocalStorage.removeItem(\"userInfo\");\ndispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST });\n\n        const config = {\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        };\n\n        const { data } = await axios.post(\n        \"/api/users\",\n        { email, password },\n        config\n        );\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        console.log(\"AAAAA\");\n    }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\ntry {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n    userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n    headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n    },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n} catch (error) {\n    dispatch({\n    type: USER_UPDATE_FAIL,\n    payload:\n        error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n    });\n}\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}