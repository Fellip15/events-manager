{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Felip/Desktop/tokenlab/frontend/src/Screens/registerPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterPage(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const cadastrar = e => {\n    e.preventDefault();\n    if (!email || !password) return alert(\"Dados incompletos.\");\n    axios.post('http://localhost:5300/api/users/cadastrar', {\n      email: email,\n      senha: password\n    }).then(res => {\n      alert(res);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterPageBody\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: cadastrar,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        placeholder: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"senha\",\n        type: \"password\",\n        placeholder: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"senha\",\n        type: \"password\",\n        placeholder: \"confirm password\",\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"J\\xE1 possui cadastro?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"DcpDy4UC8hKKyF9Go/1/85/LJMA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["axios","Link","useDispatch","useSelector","useState","useEffect","RegisterPage","history","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","message","setMessage","picMessage","setPicMessage","dispatch","userRegister","state","loading","error","userInfo","push","cadastrar","e","preventDefault","alert","post","senha","then","res","target","value"],"sources":["/mnt/c/Users/Felip/Desktop/tokenlab/frontend/src/Screens/registerPage.js"],"sourcesContent":["import axios from \"axios\";\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from 'react'\n\nfunction RegisterPage({ history }) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(null);\n    const [picMessage, setPicMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(\"/\");\n        }\n    }, [history, userInfo]);\n\n    const cadastrar = (e) => {\n        e.preventDefault();\n        if (!email || !password) return alert(\"Dados incompletos.\");\n\n        axios.post('http://localhost:5300/api/users/cadastrar', {\n            email: email, \n            senha: password\n        })\n        .then(res => {\n            alert(res);\n        })\n    }\n\n    return (\n    <div className=\"RegisterPageBody\">\n        <form onSubmit={cadastrar}>\n        <label>Email:</label>\n        <input id=\"email\" type=\"email\" placeholder=\"email\" onChange={(e) => setEmail(e.target.value)}/>\n        <input id=\"senha\" type=\"password\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)}/>\n        <input id=\"senha\" type=\"password\" placeholder=\"confirm password\" onChange={(e) => setConfirmPassword(e.target.value)}/>\n        <button type=\"submit\">Cadastrar</button>\n        <Link to=\"/login\">JÃ¡ possui cadastro?</Link>\n        </form>\n    </div>\n    );\n}\n\nexport default RegisterPage;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,YAAT,OAAmC;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC/B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;EAEA,MAAMc,QAAQ,GAAGhB,WAAW,EAA5B;EAEA,MAAMiB,YAAY,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;EACA,MAAM;IAAEE,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA+BJ,YAArC;EAEAd,SAAS,CAAC,MAAM;IACZ,IAAIkB,QAAJ,EAAc;MACVhB,OAAO,CAACiB,IAAR,CAAa,GAAb;IACH;EACJ,CAJQ,EAIN,CAACjB,OAAD,EAAUgB,QAAV,CAJM,CAAT;;EAMA,MAAME,SAAS,GAAIC,CAAD,IAAO;IACrBA,CAAC,CAACC,cAAF;IACA,IAAI,CAACnB,KAAD,IAAU,CAACE,QAAf,EAAyB,OAAOkB,KAAK,CAAC,oBAAD,CAAZ;IAEzB5B,KAAK,CAAC6B,IAAN,CAAW,2CAAX,EAAwD;MACpDrB,KAAK,EAAEA,KAD6C;MAEpDsB,KAAK,EAAEpB;IAF6C,CAAxD,EAICqB,IAJD,CAIMC,GAAG,IAAI;MACTJ,KAAK,CAACI,GAAD,CAAL;IACH,CAND;EAOH,CAXD;;EAaA,oBACA;IAAK,SAAS,EAAC,kBAAf;IAAA,uBACI;MAAM,QAAQ,EAAEP,SAAhB;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAO,EAAE,EAAC,OAAV;QAAkB,IAAI,EAAC,OAAvB;QAA+B,WAAW,EAAC,OAA3C;QAAmD,QAAQ,EAAGC,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACO,MAAF,CAASC,KAAV;MAA5E;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAO,EAAE,EAAC,OAAV;QAAkB,IAAI,EAAC,UAAvB;QAAkC,WAAW,EAAC,UAA9C;QAAyD,QAAQ,EAAGR,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACO,MAAF,CAASC,KAAV;MAArF;QAAA;QAAA;QAAA;MAAA,QAHA,eAIA;QAAO,EAAE,EAAC,OAAV;QAAkB,IAAI,EAAC,UAAvB;QAAkC,WAAW,EAAC,kBAA9C;QAAiE,QAAQ,EAAGR,CAAD,IAAOb,kBAAkB,CAACa,CAAC,CAACO,MAAF,CAASC,KAAV;MAApG;QAAA;QAAA;QAAA;MAAA,QAJA,eAKA;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALA,eAMA,QAAC,IAAD;QAAM,EAAE,EAAC,QAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADA;AAYH;;GA3CQ5B,Y;UAOYJ,W,EAEIC,W;;;KAThBG,Y;AA6CT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}